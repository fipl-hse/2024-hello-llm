import abc
from typing import Any, Callable, Iterable

import torch

class Dataset(Iterable, torch.utils.data.Dataset, metaclass=abc.ABCMeta):  # type: ignore
    def remove_columns(self, arg: list) -> Dataset: ...
    def rename_column(self, old_name: str, new_name: str) -> Dataset: ...
    def add_column(self, name: str, values: list[int]) -> Dataset: ...
    def train_test_split(self, test_size: float) -> Dataset: ...
    def select(self, arg: Iterable) -> Dataset: ...
    def map(self, func: Callable, batched: bool) -> Dataset: ...
    def filter(self, func: Callable) -> Dataset: ...
    def __getitem__(self, key: Any) -> Dataset: ...
    @staticmethod
    def from_csv(path: str) -> Dataset: ...
